// <auto-generated />
using System;
using AstroTBotService.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AstroTBotService.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250720200625_InitMigration")]
    partial class InitMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AstroTBotService.Db.Entities.AstroUser", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeSpan?>("GmtOffset")
                        .HasColumnType("interval");

                    b.Property<int>("HouseSystem")
                        .HasColumnType("integer");

                    b.Property<string>("Language")
                        .HasColumnType("text");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<long?>("ParentUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ParentUserId");

                    b.ToTable("AstroUsers");
                });

            modelBuilder.Entity("AstroTBotService.Db.Entities.Ephemeris", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("JupiterAngles")
                        .HasColumnType("double precision");

                    b.Property<double?>("MarsAngles")
                        .HasColumnType("double precision");

                    b.Property<double?>("MercuryAngles")
                        .HasColumnType("double precision");

                    b.Property<double?>("MoonAngles")
                        .HasColumnType("double precision");

                    b.Property<double?>("NeptuneAngles")
                        .HasColumnType("double precision");

                    b.Property<double?>("PlutoAngles")
                        .HasColumnType("double precision");

                    b.Property<double?>("SaturnAngles")
                        .HasColumnType("double precision");

                    b.Property<double?>("SunAngles")
                        .HasColumnType("double precision");

                    b.Property<double?>("UranAngles")
                        .HasColumnType("double precision");

                    b.Property<double?>("VenusAngles")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Ephemerises");
                });

            modelBuilder.Entity("AstroTBotService.Db.Entities.UserStage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Stage")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UsersStages");
                });

            modelBuilder.Entity("AstroTBotService.Db.Entities.AstroUser", b =>
                {
                    b.HasOne("AstroTBotService.Db.Entities.AstroUser", "ParentUser")
                        .WithMany("ChildPersons")
                        .HasForeignKey("ParentUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ParentUser");
                });

            modelBuilder.Entity("AstroTBotService.Db.Entities.AstroUser", b =>
                {
                    b.Navigation("ChildPersons");
                });
#pragma warning restore 612, 618
        }
    }
}
